{"ast":null,"code":"import _regeneratorRuntime from\"/Users/anuradhasuresh/Desktop/Web Dev/dons-365/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/anuradhasuresh/Desktop/Web Dev/dons-365/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var User=require('../models/Users');//Show details of users\nvar getUsers=function getUsers(req,res,next){User.find().then(function(response){res.json({response:response});}).catch(function(error){res.json({message:'An error occured!'});});};//User login \nvar userLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(req,res,next){var user,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return User.findOne({email:req.body.email});case 3:user=_context.sent;// token = jwt.sign({username : user.username , email : user.email} , process.env.TOKEN_SECRET);\n// res.cookie('token',token);\nif(req.body.password===user.password){res.header('Content-Type','application/json');response=new Object();response.message='Logged In';response.code=0;response.username=user.username;res.status(200).send(response);}else{response=new Object();response.error='Login failed';response.message=\"email or password is wrong\";res.header(\"Content-Type\",\"application/json\");res.status(400).send(response);}_context.next=14;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);response=new Object();response.error='Server error';response.message=\"Server failed to process user request\";res.header(\"Content-Type\",\"application/json\");res.status(500).send(response);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function userLogin(_x,_x2,_x3){return _ref.apply(this,arguments);};}();//Search users by name\nvar searchByName=function searchByName(req,res,next){var name=req.body.name;User.find(name).then(function(response){res.json({response:response});}).catch(function(error){res.json({message:'An error occured!'});});};//Show user details by Id\nvar showUser=function showUser(req,res,next){var userId=req.body.userId;User.findById(userId).then(function(response){res.json({response:response});}).catch(function(error){res.json({message:'An error occured!'});});};//Add/Register new User\nvar addUser=function addUser(req,res,next){var user=new User({name:req.body.name,address:req.body.address,email:req.body.email,password:req.body.password,phoneno:req.body.phoneno});user.save().then(function(response){res.json({response:response});}).catch(function(error){res.json({error:error});});};//Update a User\nvar updateUser=function updateUser(req,res,next){var userId=req.body.userId;var updatedData={name:req.body.name,address:req.body.address,email:req.body.email,password:req.body.password,phoneno:req.body.phoneno};User.findByIdAndUpdate(userId,{$set:updatedData}).then(function(){res.json({message:'User Updated'});}).catch(function(error){res.json({message:'An error occured!'});});};//Delete a User\nvar deleteUser=function deleteUser(req,res,next){var userId=req.body.userId;User.findOneAndRemove(userId).then(function(){req.json({message:'Employee deleted successfully'});}).catch(function(error){req.json({message:'An error occured!'});});};module.exports={getUsers:getUsers,showUser:showUser,addUser:addUser,updateUser:updateUser,deleteUser:deleteUser,searchByName:searchByName,userLogin:userLogin};","map":{"version":3,"names":["User","require","getUsers","req","res","next","find","then","response","json","catch","error","message","userLogin","findOne","email","body","user","password","header","Object","code","username","status","send","searchByName","name","showUser","userId","findById","addUser","address","phoneno","save","updateUser","updatedData","findByIdAndUpdate","$set","deleteUser","findOneAndRemove","module","exports"],"sources":["/Users/anuradhasuresh/Desktop/Web Dev/dons-365/src/controllers/userController.js"],"sourcesContent":["const User = require('../models/Users')\n//Show details of users\n\nconst getUsers = (req, res, next) => {\n    User.find().then(response => {\n        res.json({\n            response\n        })\n    })\n    .catch(error => {\n        res.json({\n            message: 'An error occured!'\n        })\n    })\n}\n\n//User login \n\nconst userLogin = async(req, res, next) => {\n    // let email = req.body.email\n    // let password = req.body.password\n    // const user = await User.findOne({email : req.body.email});\n    // if(email && password)\n    // {\n    //         User.findOne(req.body).select(\"-password\")\n    //         . then(response => {\n    //         res.json({\n    //             response\n    //         })\n    //     })\n    //     .catch(error => {\n    //         res.json({\n    //             error\n    //         })\n    //     })\n    // }    \n    try {\n        // var token = null;\n        const user = await User.findOne({email : req.body.email});\n        // token = jwt.sign({username : user.username , email : user.email} , process.env.TOKEN_SECRET);\n        // res.cookie('token',token);\n        if(req.body.password === user.password)\n        {\n            res.header('Content-Type','application/json');\n            var response = new Object();\n            response.message = 'Logged In';\n            response.code = 0;\n            response.username = user.username;\n            res.status(200).send(response);\n        }\n        else {\n            var response = new Object();\n            response.error = 'Login failed';\n            response.message = \"email or password is wrong\";\n            res.header(\"Content-Type\",\"application/json\");\n            res.status(400).send(response);\n        }\n    }\n    catch(err){\n        var response = new Object();\n        response.error = 'Server error';\n        response.message = \"Server failed to process user request\";\n        res.header(\"Content-Type\",\"application/json\");\n        res.status(500).send(response);\n    }\n}\n\n//Search users by name\n\nconst searchByName = (req, res, next) => {\n    let name = req.body.name\n    User.find(name).then(response => {\n        res.json({\n            response\n        })\n    })\n    .catch(error => {\n        res.json({\n            \n            message: 'An error occured!'\n        })\n    })\n}\n\n//Show user details by Id\nconst showUser = (req, res, next) => {\n    let userId = req.body.userId\n    User.findById(userId).then(response => {\n        res.json({\n            response\n        })\n    })\n    .catch(error => {\n        res.json({\n            message: 'An error occured!'\n        })\n    })\n}\n\n//Add/Register new User\n\nconst addUser = (req, res, next) => {\n    let user = new User({\n        name: req.body.name,\n        address: req.body.address,\n        email: req.body.email,\n        password: req.body.password,\n        phoneno: req.body.phoneno \n    })\n    user.save()\n    .then(response => {\n        res.json({\n            response\n        })\n    })\n    .catch(error =>{\n        res.json({\n            error\n        })\n    })\n}\n\n//Update a User\n\nconst updateUser = (req, res, next) => {\n    let userId = req.body.userId\n\n    let updatedData = {\n        name: req.body.name,\n        address: req.body.address,\n        email: req.body.email,\n        password: req.body.password,\n        phoneno: req.body.phoneno\n    }\n    User.findByIdAndUpdate(userId, {$set: updatedData})\n    .then(() => {\n        res.json({\n            message:'User Updated'\n        })\n    })\n    .catch(error => {\n        res.json({\n            message: 'An error occured!'\n        })\n    })\n}\n\n//Delete a User\nconst deleteUser = (req, res, next) => {\n    let userId = req.body.userId\n    User.findOneAndRemove(userId)\n    .then(() =>{\n        req.json({\n            message: 'Employee deleted successfully'\n        })        \n    })\n    .catch(error =>{\n        req.json({\n            message: 'An error occured!'\n        })\n    })\n}\n\nmodule.exports = {\n    getUsers, showUser, addUser, updateUser, deleteUser, searchByName, userLogin\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}