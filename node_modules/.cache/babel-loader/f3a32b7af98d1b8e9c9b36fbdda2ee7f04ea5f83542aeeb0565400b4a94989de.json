{"ast":null,"code":"// const { response } = require('express')\nvar Post=require('../models/Posts');// get all posts\nvar getPosts=function getPosts(req,res,next){Post.find().then(function(response){res.json({response:response});}).catch(function(error){res.json({message:'an error occurred'});});};// create a new post\nvar createPost=function createPost(req,res,next){var post=new Post({title:req.body.title,description:req.body.description,upload_date:Date()});// console.log(\"before saving\")\npost.save().then(function(response){res.json({response:response});}).catch(function(error){res.json({error:error});});};// update a post by id\nvar updatePost=function updatePost(req,res,next){var postId=req.body.postId;var updatedPostData={title:req.body.title,description:req.body.description,upload_date:req.body.upload_date};Post.findByIdAndUpdate(postId,{$set:updatedPostData}).then(function(){res.json({message:'post updated successfully'});}).catch(function(error){req.json({message:'an error occurred'});});};// search for a post by title\nvar searchByPostTitle=function searchByPostTitle(req,res,next){var title=req.params.title;Post.find(title).then({response:response}).catch(function(error){req.json({message:'An error occurred!'});});};//show the details of a post by id\nvar showPost=function showPost(req,res,next){var postId=req.params.postId;Post.findById(postId).then({response:response}).catch(function(error){req.json({message:'An error occurred!'});});};// delete a post by id\nvar deletePost=function deletePost(req,res,next){var postId=req.params.postId;Post.findOneAndDelete(postId).then(function(){req.json({message:'post deleted successfully'});}).catch(function(error){req.json({message:'An error occurred!'});});};module.exports={getPosts:getPosts,createPost:createPost,updatePost:updatePost,searchByPostTitle:searchByPostTitle,showPost:showPost,deletePost:deletePost};","map":{"version":3,"names":["Post","require","getPosts","req","res","next","find","then","response","json","catch","error","message","createPost","post","title","body","description","upload_date","Date","save","updatePost","postId","updatedPostData","findByIdAndUpdate","$set","searchByPostTitle","params","showPost","findById","deletePost","findOneAndDelete","module","exports"],"sources":["/Users/anuradhasuresh/Desktop/Web Dev/dons-365/src/controllers/postsController.js"],"sourcesContent":["// const { response } = require('express')\nconst Post = require('../models/Posts')\n\n// get all posts\nconst getPosts = (req, res, next) => {\n    Post.find().then(response => {\n        res.json({ response })\n    })\n    .catch(error => {\n        res.json({\n            message: 'an error occurred'\n        })\n    })\n}\n\n// create a new post\nconst createPost = (req, res, next) => {\n    let post = new Post({\n        title : req.body.title,\n        description : req.body.description,\n        upload_date : Date(),\n    })\n    // console.log(\"before saving\")\n    post.save()\n    .then(response => {\n        res.json({ response })\n    })\n    .catch(error => {\n        res.json({ error })\n    })\n}\n\n// update a post by id\nconst updatePost = (req, res, next) => {\n    let postId = req.body.postId\n    let updatedPostData = {\n        title : req.body.title,\n        description : req.body.description,\n        upload_date : req.body.upload_date,\n    }\n    Post.findByIdAndUpdate(postId, {$set : updatedPostData})\n    .then(() => {\n        res.json({\n            message : 'post updated successfully'\n        })\n    })\n    .catch(error => {\n        req.json({\n            message : 'an error occurred'\n        })\n    })\n}\n\n// search for a post by title\nconst searchByPostTitle = (req, res, next) => {\n    let title = req.params.title\n    Post.find(title)\n    .then({ response })\n    .catch(error =>{\n        req.json({\n            message: 'An error occurred!'\n        })\n    })\n}\n\n\n//show the details of a post by id\nconst showPost = (req, res, next) => {\n    let postId = req.params.postId\n    Post.findById(postId)\n    .then({ response })\n    .catch(error =>{\n        req.json({\n            message: 'An error occurred!'\n        })\n    })\n}\n\n// delete a post by id\nconst deletePost = (req, res, next) => {\n    let postId = req.params.postId\n    Post.findOneAndDelete(postId)\n    .then(() => {\n        req.json({\n            message : 'post deleted successfully'\n        })\n    })\n    .catch(error =>{\n        req.json({\n            message: 'An error occurred!'\n        })\n    })\n}\n\nmodule.exports = {\n    getPosts, createPost, updatePost, searchByPostTitle, showPost, deletePost\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}